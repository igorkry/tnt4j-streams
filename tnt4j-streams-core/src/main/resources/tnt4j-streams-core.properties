#TNT4J-Streams resource bundle mappings for EN language

#package com.jkoolcloud.tnt4j.streams
StreamsAgent.start.main=jKool TNT4J-Streams session starting as standalone application...
StreamsAgent.start.api=jKool TNT4J-Streams session starting as API integration...
StreamsAgent.no.activity.streams=No Activity Streams found in configuration
StreamsAgent.no.piped.activity.parsers=No piped stream parsers found in configuration
StreamsAgent.missing.cfg.file=Missing <cfg_file_name> for ''{0}'' argument
StreamsAgent.missing.argument.value=Missing value for ''{0}'' argument
StreamsAgent.invalid.args=Configuration file already defined. Can not use arguments [-f\:] and [-p\:] multiple times or together.
StreamsAgent.invalid.args2=ZooKeeper configuration file already defined. Can not use argument [-z\:] multiple times.
StreamsAgent.invalid.args3=Stream identifier to use from ZooKeeper configuration already defined. Can not use argument [-sid\:] multiple times.
StreamsAgent.invalid.args4=Argument already defined. Can not use argument [{0}] multiple times.
StreamsAgent.invalid.argument=Invalid argument\: {0}
StreamsAgent.loading.config.file=Loading TNT4J-Streams data source configuration from file\: {0}
StreamsAgent.zk.cfg.monitor.logger=Initializing logger configuration monitoring on ZK node\: {0}
StreamsAgent.zk.cfg.monitor.streams=Initializing streams configuration monitoring on ZK node\: {0}
StreamsAgent.zk.cfg.failed=Failed to connect ZK ensemble
StreamsAgent.stopping.streams=Initializing stop of running streams on thread group\: {0}
StreamsAgent.streams.stop.empty=No running streams found...
StreamsAgent.streams.stop.start=Will stop {0} running streams...
StreamsAgent.streams.stop.complete=Running streams stop completed. Stop process duration\: {0} msec.
StreamsAgent.invalid.stream.id=Invalid stream identifier\: {0}
StreamsAgent.streams.registry.sid=Using streams configuration registry stream identifier\: {0}
StreamsAgent.streams.registry.sid.zk.path=Resolved stream identifier ''{0}'' configured ZK node path\: {1}
StreamsAgent.streams.registry.sid.setup=Setting up ZK nodes data for stream identifier\: {0}
StreamsAgent.help=\n\
  \Valid arguments\:\n\
  \      [-f\:<cfg_file_name>]|[[-p\:<cfg_file_name>] [-s]] [[-z\:<cfg_file_name>] [-sid\:<stream_id>]] [-h|-?]\n\
  \where\:\n\
  \   -f      -  Load TNT4J-Streams data source configuration from <cfg_file_name>\n\
  \   -p      -  Load parsers configuration from <cfg_file_name>\n\
  \     -s      -  Skip unparsed activity data entries and continue streaming\n\
  \   -z      -  Load TNT4J-Streams ZooKeeper configuration from <cfg_file_name>\n\
  \     -sid    -  Stream identifier to use form ZooKeeper configuration\n\
  \   -h, -?  -  Print usage\n

#package com.jkoolcloud.tnt4j.streams.configure
ConfigParserHandler.element.must.have=Element ''{0}'' must have ''{1}'' or ''{2}'' attributes defined or one or more ''{3}'' child elements{4}
ConfigParserHandler.multiple.elements=Can not have multiple {0} elements
ConfigParserHandler.missing.attribute=Missing element ''{0}'' attribute ''{1}'' data
ConfigParserHandler.missing.element=Missing element ''{0}'' data
ConfigParserHandler.missing.attribute2=Missing element ''{0}'' attribute ''{1}'' for {2}
ConfigParserHandler.malformed.configuration=Malformed configuration\: Detected nested ''{0}'' definitions
ConfigParserHandler.malformed.configuration5=Malformed configuration\: Detected nested ''{0}'' and ''{1}'' definitions
ConfigParserHandler.malformed.configuration2=Malformed configuration\: ''{0}'' expected to have ''{1}'' as parent
ConfigParserHandler.malformed.configuration3=Malformed configuration\: ''{0}'' expected to have ''{1}'' or ''{2}'' as parent
ConfigParserHandler.malformed.configuration4=Malformed configuration\: ''{0}'' expected to have ''{1}'', ''{2}'' or ''{3}'' as parent
ConfigParserHandler.duplicate.parser.definition=Duplicate parser definition ''{0}''
ConfigParserHandler.not.implement.interface={0} {1} ''{2}'' does not implement interface ''{3}''{4}
ConfigParserHandler.failed.to.load=Failed to load {0} {1} ''{2}''{3}
ConfigParserHandler.element.has.both=Element ''{0}'' must not have both ''{1}'' or ''{2}'' attributes defined and one or more ''{3}'' child elements{4}
ConfigParserHandler.element.has.both2=Element ''{0}'' can not have both ''{1}'' and ''{2}'' child elements{3}
ConfigParserHandler.must.contain=Element ''{0}'' must contain one of attributes ''{1}'' or ''{2}''
ConfigParserHandler.cannot.contain=Element ''{0}'' can not contain both attributes ''{1}'' and ''{2}''
ConfigParserHandler.duplicate=Duplicate {0} ''{1}''
ConfigParserHandler.not.extend.class={0} {1} ''{2}'' does not extend class ''{3}''{4}
ConfigParserHandler.undefined.reference=Undefined ''{0}'' reference ''{1}''
ConfigParserHandler.at.line=, at line {0}
ConfigParserHandler.could.not.add.stream.parser=Could not add stream ''{0}'' parser ''{1}''\:
ConfigParserHandler.could.not.add.stream.reference=Could not add stream ''{0}'' referenced entity ''{1}''\:
ConfigParserHandler.could.not.init.obj.param=Could not initialize java-object ''{0}'' parameter ''{1}''\:
ConfigParserHandler.element.has.both3=Element ''{0}'' can not have both attribute ''{1}'' and element data value defined{2}
ConfigParserHandler.element.ref.missing=Element ''{0}'' has missing reference to ''{1}'' identified ''{2}''{3}
ConfigParserHandler.element.no.binding=Element ''{0}'' must follow after ''{1}'' definition{2}
ConfigParserHandler.field.has.no.locators=Field ''{0}'' has no locators defined to add ''{1}''
ConfigParserHandler.invalidRefType=Unsupported resource reference ''{0}'' type ''{1}''
ConfigParserHandler.invalidResource=Unsupported resource reference ''{0}'' URI extension ''{1}''
ConfigParserHandler.jsonParseException=Could not load resource ''{0}'' from URI ''{1}''

StreamsConfig.file.not.found=Could not find configuration files\: ''{0}''
StreamsConfig.files.not.found=Could not find configuration files\: ''{0}'' or ''{1}''

#StreamsConfigSAXParser.xml.validation.error=XML-XSD validation failure: {0}
#StreamsConfigSAXParser.xml.validation.error=XML-XSD validation failure: line={0}; column={1}; {2}={3}
StreamsConfigSAXParser.xml.validation.error=Configuration XML-XSD validation failure: {2}:({0}, {1})  {3} 

FileStreamStateHandler.file.error=Error saving progress due to problem reading last processed file\: {0}
FileStreamStateHandler.file.error.save=Error saving progress to configuration file\: {0}
FileStreamStateHandler.file.error.load=Error loading progress from configuration file\: {0}
FileStreamStateHandler.file.not.parsed=Could not parse configuration file\: {0}
FileStreamStateHandler.illegal.argument.file=Streamed files array for state persisting should not be empty.
FileStreamStateHandler.location.not.found=Could not find persisted polling file location.

ZKConfigInit.starting.main=Starting TNT4J-Streams configuration ZK uploader...
ZKConfigInit.upload.cfg.not.defined=Configuration file of TNT4J-Streams configuration upload to ZK not defined!..
ZKConfigInit.clearing.zk=Removing ZooKeeper contained TNT4J-Streams configuration under path\: {0}
ZKConfigInit.upload.error=Exception while uploading TNT4J-Streams configuration to ZK\: {0}
ZKConfigInit.invalid.args=Configuration file already defined. Can not use argument [-f\:] multiple times.
ZKConfigInit.loading.cfg.data=Loading TNT4J-Streams configuration file\: {0}
ZKConfigInit.loading.cfg.failed=Could not read data from file\: {0}
ZKConfigInit.help=\n\
  \Valid arguments\:\n\
  \      [-f\:<cfg_file_name>] [-c]\n\
  \where\:\n\
  \   -f      -  Load TNT4J-Streams configuration upload to ZooKeeper configuration from <cfg_file_name>\n\
  \   -c      -  Clean ZooKeeper contained TNT4J-Streams configuration\n

ZKConfigManager.props.load.error=Could not load TNT4J-Streams ZooKeeper configuration properties from file\: {0}
ZKConfigManager.node.changed=ZK node data has changed\: {0}
ZKConfigManager.node.deleted=ZK Node was deleted. Waiting for ZK node to be created\: {0}
ZKConfigManager.node.created=ZK node was created\: {0}
ZKConfigManager.node.exists.failed=Could not perform initial ZK node existence check on\: {0}
ZKConfigManager.node.create.wait=Waiting for ZK node to be created\: {0}
ZKConfigManager.loading.cfg.file=Loading streams ZK configuration from file\: {0}
ZKConfigManager.connecting=Connecting to ZK ensemble...
ZKConfigManager.connected=Established ZK connection\: {0}
ZKConfigManager.loading.node.data=Loading configuration data from ZK node\: {0}
ZKConfigManager.cfg.loading.failed=Failed to load and apply ZK stored configuration data
ZKConfigManager.loaded.props=Loaded {0} streams ZK configuration properties...
ZKConfigManager.resetting.cfg=No streams ZK configuration properties file provided. Clearing current configuration...
ZKConfigManager.empty.cfg.props=Connection configuration properties are empty. Will use default values...
ZKConfigManager.cfg.ent.setup.zk.path=Resolved configuration entity ''{0}'' configured ZK node path\: {1}
ZKConfigManager.cfg.ent.setup.file.path=Resolved configuration entity ''{0}'' configured cfg. file path\: {1}
ZKConfigManager.cfg.ent.setup.zk.path.empty=Configuration entity ''{0}'' resolved ZK node path is empty. Skipping setup...
ZKConfigManager.cfg.ent.setup.ok=Configuration entity ''{0}'' defined ZK node exists and has data. Nothing to do...
ZKConfigManager.cfg.ent.setup.setting=Setting configuration entity ''{0}'' defined ZK node data from file\: {1}
ZKConfigManager.cfg.ent.setup.updating=Updating configuration entity ''{0}'' defined ZK node data from file\: {1}

#package com.jkoolcloud.tnt4j.streams.fields
ActivityField.field.type.name.empty=Activity field type name can not be empty

ActivityFieldLocator.mapped.default=Applying default mapping for locator type ''{0}''
ActivityFieldLocator.mapped.result=Mapped value ''{0}'' to ''{1}'' for locator type ''{2}''
ActivityFieldLocator.numeric.locator.positive=Numeric locator must be > 0
ActivityFieldLocator.mapping.add.error=Could not add field value mapping from ''{0}'' to ''{1}'' as ''{2}''
ActivityFieldLocator.adding.filter=Adding field entity ''{0}'' filter\: {1}
ActivityFieldLocator.adding.transformation=Adding field entity ''{0}'' transformation\: {1}

ActivityInfo.applying.field=Applying field {0} from\: {1}
ActivityInfo.multiple.enum.values=Field {0}, multiple values are not supported for enumeration-based fields
ActivityInfo.failed.parsing=Failed parsing field\: {0}, number of values does not match number of locators
ActivityInfo.field.value.null=Field {0} resolves to 'null' value. Will not apply field to activity...
ActivityInfo.applying.field.value=Applying field ''{0}'', value \= {1}
ActivityInfo.unrecognized.field=Unrecognized Activity field\: {0}
ActivityInfo.set.field=Set field {0} value to ''{1}''
ActivityInfo.set.property=Set property ''{0}'' value to ''{1}'' as ''{2}'' replacing map entry\: ''{3}''
ActivityInfo.tracker.null=Tracker must be non-null
ActivityInfo.invalid.child=Can not add {0} as {1} child. Skipping...
ActivityInfo.transformation.failed=Failed to transform field ''{0}'' value\: ''{1}''
ActivityInfo.filtering.failed=Failed to evaluate filter expression for field ''{0}'' value\: ''{1}''
ActivityInfo.caching.field.value=Caching field ''{0}'' as ''{1}'', value \= {2}
ActivityInfo.formatting.arguments.mismatch=Field value formatting pattern ''{0}'' refers {1} argument, while arguments array length is {2}  

StreamFieldType.invalid.ordinal=Invalid {2} ordinal value ''{0}'' (range\: 0-{1})
StreamFieldType.not.defined={0} does not have a defined enumeration set

#package com.jkoolcloud.tnt4j.streams.filters
DefaultValueFilter.empty.value=Filter value definition can not be empty or null

ExpressionFilter.filtering.failed=Failed to apply filter\: {0}
ExpressionFilter.unknown.language=Could not find expression based filter bean for language ''{0}''
ExpressionFilter.empty.expression=Filter expression definition can not be empty or null

#package com.jkoolcloud.tnt4j.streams.inputs.feeds
AbstractFeed.read.line=Stream feed reader read RAW data line\: {0}
AbstractFeed.read.bytes=Stream feeder read RAW data bytes\: {0}
AbstractFeed.read.closed=Stream feeder is already closed!..

#package com.jkoolcloud.tnt4j.streams.inputs
FeedInputStream.cannot.have.multiple.parsers=FeedInputStream can have only one parser referenced
FeedInputStream.skipping.remaining.parsers=FeedInputStream took only first parser from provided collection. Remaining are ignored\!..
FeedInputStream.waiting.for.connection=Waiting for socket connection on port\: {0}
FeedInputStream.accepted.connection=Accepted connection, reading data from socket\: {0}
FeedInputStream.stream.still.open=Stream is still open
FeedInputStream.no.stream.source=Input stream source type not specified
FeedInputStream.no.stream.reader=RAW data input source is not set
FeedInputStream.resetting.stream=Resetting feed stream for {0}\!..
FeedInputStream.stream.reset=Feed stream ''{0}'' has been reset\!..
FeedInputStream.reader.terminated=Stream RAW data input source has been terminated\!..
FeedInputStream.closing.stream.connection=Closing stream for connection {0}\!..
FeedInputStream.file.not.found=File not found\: {0}
FeedInputStream.no.more.files=No more files available to read\!..
FeedInputStream.input.start.failed=Failed to start feed stream input\: {0}
FeedInputStream.opening.file=Reading data from file\: {0}

FileLineStream.initializing.stream=Initializing stream using file name\: {0}
FileLineStream.reading.changes=Reading changes of file\: {0}
FileLineStream.cant.access=Can not access file\! trying to swap to next file.
FileLineStream.next.not.found=Next file not found\! Interrupting streaming...
FileLineStream.file.updated=File updated {0} sec. ago. Time since last file reading {1} sec.
FileLineStream.no.changes=No changes available...
FileLineStream.error.rolling=Error occurred while rolling to marked file line\:
FileLineStream.error.reading=Error reading new file entries\:
FileLineStream.changing.to.next=Changing to next available file\: {0}
FileLineStream.reader.error=Could not initialize reader for file\! Interrupting streaming...
FileLineStream.file.shorter=Looks like file got shorter...
FileLineStream.resetting.reader=Resetting file reader to {0} position...
FileLineStream.changing.to.previous=Changing to previous found file\: {0}
FileLineStream.error.reading.changes=Error occurred while reading changes\:
FileLineStream.changes.read.end=Ending file changes reading\: {0}
FileLineStream.waiting=Waiting {0} sec. until next poll...

TNTInputStream.failed.to.process=Failed to process activity data at position {0}
TNTInputStream.starting=Starting stream ''{0}''...
TNTInputStream.data.stream.ended=Stream ''{0}'' data input ended ...
TNTInputStream.no.parser=No parser accepted message\: {0}
TNTInputStream.will.retry=Will retry in {0} seconds
TNTInputStream.failed.record.activity.at=Failed to record activity at position {0}\: {1}
TNTInputStream.failed.record.activity=Failed to record activity\: {0}
TNTInputStream.thread.ended=Thread {0} ended
TNTInputStream.no.owner.thread=Owner thread has not been set
TNTInputStream.tasks.buffer.limit=Activity processing task was not accepted by executor service over {0} seconds\!..
TNTInputStream.property.undefined=Required stream property {0} is not defined
TNTInputStream.property.undefined.one.of=Requires one of stream properties\: {0} or {1}
TNTInputStream.could.not.parse.activity=Could not parse activity data\: {0}
TNTInputStream.stream.statistics=Stream ''{0}'' statistics\: {1}
TNTInputStream.output.undefined=Stream output is not defined from configuration, setting default...
TNTInputStream.stream.ready={0} stream ''{1}'' initialized\!..
TNTInputStream.stream.start={0} stream ''{1}'' is ready to receive data...
TNTInputStream.cannot.set.both=Can not set both {0} and {1}
TNTInputStream.tracker.check.state.failed=Tracker or tracker event sink is not opened. Check TNT4J tracker configuration\!..
TNTInputStream.property.illegal=Stream property {0}={1} is not supported or illegal
TNTInputStream.activity.filtered.out=Activity filtered out from stream\: {0}
TNTInputStream.failed.cleanup.stream=Failed to cleanup stream\: {0}

AbstractBufferedStream.changes.buffer.limit=Input buffer is full for {0}sec. and stream entry is skipped\: {1}
AbstractBufferedStream.changes.buffer.uninitialized=Queue of input buffer is not initialized\!..
AbstractBufferedStream.offer.interrupted=Input data offer to buffer queue is interrupted for item\: {0}
AbstractBufferedStream.input.close.error=Exception occurred while closing stream input processor\:
AbstractBufferedStream.input.shutdown=Shutting down stream ''{0}'' input processor\: {1}
AbstractBufferedStream.input.start.failed=Could not start input data reception\:

HttpStream.connection.timed.out=Connection timed out
HttpStream.http.server.exception=HTTP server exception\:
HttpStream.ok=OK
HttpStream.activities.buffer.size.limit=Activities buffer size limit is reached and activity entry is skipped\!..
HttpStream.no.activity=No activity content found\!..
HttpStream.bad.http.request=Bad HTTP request found. Does not have HttpEntity\!..

PipedStream.raw.stream.not.opened=Piped RAW data input is not opened for reading

ZipLineStream.initializing.stream=Initializing Zip stream using file name\: {0}
ZipLineStream.opening.entry=Opening Zip file entry\: {0}
ZipLineStream.zip.input.not.opened=Zip input is not opened for reading

JavaInputStream.input.not.opened=Java input stream/reader is not opened for reading

RedirectTNT4JStream.redirect.empty.input=Empty data package read from input\! Skipping...
RedirectTNT4JStream.sending.item=Redirecting\: {0}
RedirectTNT4JStream.resetting.stream=Resetting stream {0}\!
RedirectTNT4JStream.resetting.failed=Stream {0} resetting failed\: {1}
RedirectTNT4JStream.stream.reset=Stream has been reset on port {0}\!..
RedirectTNT4JStream.failed.accept.connection=Failed to accept socket connection\: {0}
RedirectTNT4JStream.socket.initialization=Failed to initialize socket connection feeder\: {0}
RedirectTNT4JStream.feeder.data.ended=Feeder data input ended...
RedirectTNT4JStream.feeder.failure=Feeder failed to read/buffer activity data\: {0}

#package com.jkoolcloud.tnt4j.streams.outputs
TNTStreamOutput.tracker.not.opened=Tracker is not opened to record activity data...
TNTStreamOutput.failed.to.open=Failed to open tracker\: {0}
TNTStreamOutput.build.new.tracker=Build new tracker for source {0}
TNTStreamOutput.default.tracker=Build default thread ''{0}'' tracker for source ''{1}''
TNTStreamOutput.init.cfg.file=Initializing tnt4j configuration from file\: {0}
TNTStreamOutput.zk.cfg.monitor.tnt4j=Initializing tnt4j configuration monitoring on ZK node\: {0}
TNTStreamOutput.retry.successful=Activity recording retry successful
TNTStreamOutput.recording.failed=Failed recording activity. Reason\: {0}
TNTStreamOutput.recording.failed.trace=Activity recording failure trace\:
TNTStreamOutput.recording.failed.activity=Failed to record activity data\: {0}
TNTStreamOutput.will.retry=Will retry recording in {0} seconds
TNTStreamOutput.null.activity=Skipping 'null' activity from sending...
TNTStreamOutput.tracker.statistics=Tracker ''{0}'' statistics before close\: {1}
TNTStreamOutput.tracker.drop.detected=Detected tracker activity package drop without sink transmission error

#package com.jkoolcloud.tnt4j.streams.parsers
ActivityParser.adding.field=Adding field ''{0}''
ActivityParser.removing.field=Removing field ''{0}''
ActivityParser.data.unsupported=RAW activity data in the format of a ''{0}'' is not supported
ActivityParser.data.end=Reached end of ''{0}'' RAW activity data stream
ActivityParser.error.reading=Error reading from ''{0}'' RAW activity data stream
ActivityParser.setting=Setting ''{0}'' to ''{1}''
ActivityParser.input.not.match=Input does not match pattern ''{1}'' defined in parser ''{0}''
ActivityParser.activity.raw.data=RAW activity data\: {0}
ActivityParser.preparsed.data=Activity data after pre-parsing\: {0}
ActivityParser.parsing.data=Parsing\: {0}
ActivityParser.nothing.to.parse=Got nothing to parse from RAW activity data\!..
ActivityParser.parsing.failed=Failed parsing data for field ''{0}''
ActivityParser.ignoring=Ignoring property ''{0}={1}''
ActivityParser.split=Split input into {0} fields
ActivityParser.splitting.string=Input string to split\: {0}
ActivityParser.no.fields=No fields found in parsed activity data or parser has suppressed/filtered activity data 
ActivityParser.fields.failed=Name locators size and parsed value array size must match\!
ActivityParser.duplicate.field=Parser ''{0}'' already has field named ''{1}''
ActivityParser.locator.resolved=Locator ''{0}'' resolved value\: {1}
ActivityParser.transformation.failed=Failed to transform locator ''{0}'' value\: ''{1}''
ActivityParser.field.filtering.failed=Failed to evaluate filter expression for locator ''{0}'' value\: ''{1}''
ActivityParser.activity.filtering.failed=Failed to evaluate filter expression for activity information data\: ''{0}''
ActivityParser.adding.filter=Adding activity filter\: {0}
ActivityParser.removing.filter=Removing activity filter ''{0}''
ActivityParser.pre.parsing.failed=Activity data pre-parsing failed\:
ActivityParser.data.before.pre.parsing=Activity data before pre-parsing\: {0}
ActivityParser.data.after.pre.parsing=Activity data after pre-parsing step\: {0}
ActivityParser.pre.parsing.data=Pre-Parsing activity data using\: {0}

ActivityJavaObjectParser.could.not.get.declared.field=Could not get declared field ''{0}'' value from ''{1}'' class object\: ''{2}''

ActivityNameValueParser.no.field.delimiter=Field delimiter not specified
ActivityNameValueParser.no.value.delimiter=Value delimiter not specified
ActivityNameValueParser.found=Found Name/Value\: {0}

ActivityRegExParser.no.regex.pattern=Regular expression pattern not specified or empty
ActivityRegExParser.conflicting.mapping=Conflicting mapping for ''{0}''
ActivityRegExParser.applying.regex=Applying RegEx Match mappings, count \= {0}
ActivityRegExParser.match=match {0} \= {1}
ActivityRegExParser.found.matches=Found {0} matches
ActivityRegExParser.setting.field=Setting field {0} from match locations
ActivityRegExParser.failed.parsing.regex=Failed parsing RegEx Match data for field {0}
ActivityRegExParser.setting.group.field=Setting field {0} from group locations
ActivityRegExParser.failed.parsing.regex.group=Failed parsing RegEx Group data for field {0}

ActivityTokenParser.no.field.delimiter=Field delimiter not specified or empty

ActivityXmlParser.adding.mapping=Adding {0} mapping {1}
ActivityXmlParser.required.locator.not.found=Required locator ''{0}'' value not resolved for field ''{1}''
ActivityXMLParser.xPath.exception=Exception occurred while processing XPath expression\:
ActivityXmlParser.xmlDocument.parse.error=Can not build XML DOM document from input\:
ActivityXmlParser.xmlDocument.toString.error=Can not deserialize XML DOM document to string\:

MessageActivityXmlParser.msg.signature=Message Signature ({0})\: msgType\={1} msgFormat\={2} msgId\={3} [{4}] userId\={5} putApplType\={6} putApplName\={7} putDate\={8} putTime\={9}

ActivityJsonParser.jsonDocument.parse.error=Can not build JSON Document Context from input stream\:
ActivityJsonParser.path.exception=JSON path read exception for locator ''{0}''\: {1}

MessageType.illegal.num.value=Value ''{0}'' is not valid for enumeration {1}
MessageType.illegal.obj.value=Can not convert object of type ''{0}'' to enum {1}
MessageType.object.null=Object must be non-null

#package com.jkoolcloud.tnt4j.streams.preparsers
XMLFromBinDataPreParser.skip.failed = Could not skip {0} bytes in RAW data input stream\:
XMLFromBinDataPreParser.found.element = Element found\: {0}
XMLFromBinDataPreParser.skipping = Skipping at\: {0}
XMLFromBinDataPreParser.doc.init.failure=Can't initialize new document
XMLFromBinDataPreParser.input.unsupported=Input data not supported
XMLFromBinDataPreParser.init.failure=Initiation failed
XMLFromBinDataPreParser.bin.data.parse.failure=IO error
XMLFromBinDataPreParser.data.read.failed=Failed to read data bytes from input stream\: {0}

#package com.jkoolcloud.tnt4j.streams.transform
ValueTransformation.transformation.failed=Failed to apply transformation ''{0}''
ScriptTransformation.unknown.language=Could not find script based transformation bean for language ''{0}''

#package com.jkoolcloud.tnt4j.streams.utils
StreamsThread.wait.for=Completed waiting for thread to die in {0} msec.
StreamsThread.sleepFully.interrupted=Sleep interrupted (count\={0}), after {1} msec. (initial\={2})
StreamsThread.sleepFully.remaining=\   Going back to sleep for {0} msec.
StreamsThread.halt=Signaled to terminate {0}
StreamsThread.stop=Signaled to stop {0}
StreamsThread.sleep.interrupted=Sleep interrupted after {0} msec. (initial\={1})

TimestampFormatter.unsupported.pattern=Unsupported date/time pattern\: dataType\={0}, units\={1}, pattern\={2}, locale\={3}
TimestampFormatter.failed.parsing=Failed to parse date/time value ''{0}''\: {1}

Range.range.string.empty=Range definition string is empty

LoggerUtils.unknown.logger=Unknown logger. Can not apply new logger configuration...
LoggerUtils.log4j.load.error=Could not load LOG4J properties
LoggerUtils.log4j.empty.configuration=Loaded LOG4J logger configuration properties are empty!..
LoggerUtils.log4j.reconfiguring=Reconfiguring LOG4J logger. Loaded {0} logger properties...
LoggerUtils.log4j.reconfiguring.fail=Could not apply new LOG4J configuration
LoggerUtils.log4j.reconfiguring.end=LOG4J logger reconfiguration completed...
LoggerUtils.jul.reconfiguring=Reconfiguring JUL logger...
LoggerUtils.jul.reconfiguring.fail=Could not apply new JUL configuration
LoggerUtils.jul.reconfiguring.end=JUL logger reconfiguration completed...
LoggerUtils.logback.reconfiguring=Reconfiguring LOGBACK logger...
LoggerUtils.logback.reconfiguring.fail=Could not apply new LOGBACK configuration
LoggerUtils.logback.reconfiguring.end=LOGBACK logger reconfiguration completed...

Utils.empty.file.descriptor=Provided file descriptor is empty
Utils.name.empty=Name must be not empty
Utils.no.enum.constant=No enum constant {1}.{0}

#package com.jkoolcloud.tnt4j.streams.custom.inputs
CustomStream.no.activity.data=No activity data found to parse. JSON\: ''{0}''
CustomStream.no.json.data=No JSON data found

#package com.jkoolcloud.tnt4j.streams.custom.parsers
ApacheAccessLogParser.setting.regex.mapping=Setting Apache access log parsing RegEx mapping {0} from ''{1}'' to ''{2}''
ApacheAccessLogParser.regex.made=Made Apache access log parser ''{0}'' RegEx\: ''{1}''
ApacheAccessLogParser.could.not.make.regex=Could not make Apache access log parser ''{0}'' RegEx for pattern\: ''{0}''

SnapshotsJsonParser.no.snapshots=Snapshots parser named ''{0}'' resolved no snapshots from field ''{1}''\!..
SnapshotsJsonParser.no.snapshot.parser=No parser accepted snapshot data\: {0}

#package com.jkoolcloud.tnt4j.streams.custom.dirStream
DirWatchdog.empty.dir.path=Path of directory to watch must be non-empty

DirStreamingManager.job.offer.interrupted=Streaming job ''{0}'' adding to executor queue was interrupted
DirStreamingManager.dir.monitoring.started=Directory ''{0}'' monitoring for files ''{1}'' has started...
DirStreamingManager.could.not.start.watchdog=Could not start directory watchdog
DirStreamingManager.could.not.stop.watchdog=Could not stop directory watchdog correctly
DirStreamingManager.job.created=Job config created {0}
DirStreamingManager.job.changed=Job config changed {0}
DirStreamingManager.job.deleted=Job config deleted {0}
DirStreamingManager.job.id.not.found=Job identifier not defined in configuration file name ''{0}''. Skipping...

#### END ###