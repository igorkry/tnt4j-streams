<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TNTDataSource" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:annotation>
        <xs:appinfo>
            jKool LLC TNT4J-Streams data source configuration schema.
            Copyright (c) jKool, LLC. All rights reserved.
        </xs:appinfo>
        <xs:documentation>
            This schema defines configuration format of the jKool LLC TNT4J-Streams data source.
        </xs:documentation>
    </xs:annotation>

    <!-- Data types enumeration definition -->
    <xs:simpleType name="DataTypes">
        <xs:annotation>
            <xs:documentation>
                Supported activity field data types.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="String">
                <xs:annotation>
                    <xs:documentation>
                        Field value is a character string.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Binary">
                <xs:annotation>
                    <xs:documentation>
                        Field value is a generic sequence of bytes.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Number">
                <xs:annotation>
                    <xs:documentation>
                        Field value is a numeric value.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="DateTime">
                <xs:annotation>
                    <xs:documentation>
                        Field value is a date, time, or date/time expression with a specific format.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Timestamp">
                <xs:annotation>
                    <xs:documentation>
                        Field value is a numeric value representing a date/time in the specified resolution.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Data formats enumeration definition -->
    <xs:simpleType name="DataFormats">
        <xs:restriction base="xs:string">
            <xs:enumeration value="base64Binary">
                <xs:annotation>
                    <xs:documentation>
                        Data is binary, in base64 encoding
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="hexBinary">
                <xs:annotation>
                    <xs:documentation>
                        Data is binary, represented as a hex string
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="string">
                <xs:annotation>
                    <xs:documentation>
                        Data is a string of characters
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="[DateTime-specification]">
                <xs:annotation>
                    <xs:documentation>
                        Data is a date/time expression in the specified format (see java.text.SimpleDateFormat)
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="[Decimal-specification]">
                <xs:annotation>
                    <xs:documentation>
                        Data is a numeric expression in the specified format (see java.text.DecimalFormat)
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Allow user-defined types for custom data formats in addition to built-in formats for use with user-defined parsers/streams -->
    <xs:simpleType name="DataFormatsAll">
        <xs:annotation>
            <xs:documentation>
                Can be either one of the internally-supported data format types or a custom one.
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="DataFormats xs:string"/>
    </xs:simpleType>

    <!-- Data units types enumeration definition -->
    <xs:simpleType name="UnitsTypes">
        <xs:annotation>
            <xs:documentation>
                Set of internally-supported precision units for field data.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Days"/>
            <xs:enumeration value="Hours"/>
            <xs:enumeration value="Minutes"/>
            <xs:enumeration value="Seconds"/>
            <xs:enumeration value="Milliseconds"/>
            <xs:enumeration value="Microseconds"/>
            <xs:enumeration value="Nanoseconds"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Allow user-defined types for custom units types in addition to built-in types for use with user-defined parsers/streams -->
    <xs:simpleType name="UnitsTypesAll">
        <xs:annotation>
            <xs:documentation>
                Can be either one of the internally-supported unit types or a custom one.
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="UnitsTypes xs:string"/>
    </xs:simpleType>

    <!-- Activity field names enumeration definition -->
    <xs:simpleType name="FieldNames">
        <xs:annotation>
            <xs:documentation>
                Set of predefined TNT4J-Streams activity entity attributes.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="ApplName">
                <xs:annotation>
                    <xs:documentation>
                        Name of application associated with the activity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ServerName">
                <xs:annotation>
                    <xs:documentation>
                        Host name of server where activity occurred.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ServerIp">
                <xs:annotation>
                    <xs:documentation>
                        IP Address of server where activity occurred.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="EventName">
                <xs:annotation>
                    <xs:documentation>
                        String identifying activity/operation/event/method.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="EventType">
                <xs:annotation>
                    <xs:documentation>
                        Type of activity - Value must match values in OpType enumeration.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StartTime">
                <xs:annotation>
                    <xs:documentation>
                        Start time of the activity as either a date/time or a timestamp.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="EndTime">
                <xs:annotation>
                    <xs:documentation>
                        End time of the activity as either a date/time or a timestamp.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ElapsedTime">
                <xs:annotation>
                    <xs:documentation>
                        Elapsed time of the activity in the specified units - default: Microseconds.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ProcessId">
                <xs:annotation>
                    <xs:documentation>
                        Identifier of process where activity entity has occurred.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ThreadId">
                <xs:annotation>
                    <xs:documentation>
                        Identifier of thread where activity entity has occurred.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="CompCode">
                <xs:annotation>
                    <xs:documentation>
                        Indicates completion status of the activity - Value must match values in OpCompCode enumeration.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ReasonCode">
                <xs:annotation>
                    <xs:documentation>
                        Numeric reason/error code associated with the activity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Exception">
                <xs:annotation>
                    <xs:documentation>
                        Error/exception message associated with the activity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Severity">
                <xs:annotation>
                    <xs:documentation>
                        Indicates severity of the activity - Value can either be a label in OperationSeverity enumeration or a numeric
                        value.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Location">
                <xs:annotation>
                    <xs:documentation>
                        String defining location activity occurred at - e.g. GPS location, source file line, etc.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Correlator">
                <xs:annotation>
                    <xs:documentation>
                        Identifier used to correlate/relate activity entries to group them into logical entities.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Tag">
                <xs:annotation>
                    <xs:documentation>
                        User-defined label to associate with the activity, generally for locating activity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="UserName">
                <xs:annotation>
                    <xs:documentation>
                        Name of user associated with the activity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ResourceName">
                <xs:annotation>
                    <xs:documentation>
                        Name of resource associated with the activity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Message">
                <xs:annotation>
                    <xs:documentation>
                        Data to associate with the activity entity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="TrackingId">
                <xs:annotation>
                    <xs:documentation>
                        Identifier used to uniquely identify the data associated with this activity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="MsgLength">
                <xs:annotation>
                    <xs:documentation>
                        Length of activity entity message data.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="MsgMimeType">
                <xs:annotation>
                    <xs:documentation>
                        MIME type of activity entity message data.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="MsgEncoding">
                <xs:annotation>
                    <xs:documentation>
                        Encoding of activity entity message data.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="MsgCharSet">
                <xs:annotation>
                    <xs:documentation>
                        CharSet of activity entity message data.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Category">
                <xs:annotation>
                    <xs:documentation>
                        Activity entity category name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ParentId">
                <xs:annotation>
                    <xs:documentation>
                        Identifier used to uniquely identify parent activity associated with this activity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Allow user-defined types for custom field names in addition to built-in names for use with user-defined parsers -->
    <xs:simpleType name="FieldNamesAll">
        <xs:annotation>
            <xs:documentation>
                Can be either one of the internally-supported stream activity entity field names or a custom one - mapped as activity entity
                property.
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="FieldNames xs:string"/>
    </xs:simpleType>

    <!-- Field value locator types enumeration definition -->
    <xs:simpleType name="FieldLocatorTypes">
        <xs:annotation>
            <xs:documentation>
                Set of internally-supported activity field value locators - actual support is parser-specific.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="StreamProp">
                <xs:annotation>
                    <xs:documentation>
                        Locator value is the value for the specified stream property.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Index">
                <xs:annotation>
                    <xs:documentation>
                        Locator value is the value at the specified index/offset/position.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Label">
                <xs:annotation>
                    <xs:documentation>
                        Locator value is the value for the specified label/expression (e.g. name/value pairs like label=value, XPath
                        expression, etc.).
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="REGroupNum">
                <xs:annotation>
                    <xs:documentation>
                        Locator value is the value for the specified regular expression group number.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="REMatchNum">
                <xs:annotation>
                    <xs:documentation>
                        Locator value is the value for the specified regular expression match sequence position.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="REGroupName">
                <xs:annotation>
                    <xs:documentation>
                        Locator value is the value for the specified regular expression group name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Cache">
                <xs:annotation>
                    <xs:documentation>
                        Locator value is the value for stream stored cache key.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Activity">
                <xs:annotation>
                    <xs:documentation>
                        Locator value is the value for streamed activity entity field name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Allow user-defined types for custom location types in addition to built-in types for use with user-defined parsers/streams -->
    <xs:simpleType name="FieldLocatorTypesAll">
        <xs:annotation>
            <xs:documentation>
                Can be either one of the internally-supported element locator types or a custom one - actual support is parser-specific.
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="FieldLocatorTypes xs:string"/>
    </xs:simpleType>

    <!-- Stream property names enumeration definition -->
    <xs:simpleType name="StreamProperties">
        <xs:annotation>
            <xs:documentation>
                Set of internally-supported stream properties.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="DateTime">
                <xs:annotation>
                    <xs:documentation>
                        Property value represents an initial, base, or default date, time, or date/time.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="FileName">
                <xs:annotation>
                    <xs:documentation>
                        Property value represents a file name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Host">
                <xs:annotation>
                    <xs:documentation>
                        Property value represents a connection host name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Port">
                <xs:annotation>
                    <xs:documentation>
                        Property value is a connection port number, interpreted based on the context in which it is used.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="QueueManager">
                <xs:annotation>
                    <xs:documentation>
                        Property value is a queue manager name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Queue">
                <xs:annotation>
                    <xs:documentation>
                        Property value is a queue name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Topic">
                <xs:annotation>
                    <xs:documentation>
                        Property value is a topic name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Subscription">
                <xs:annotation>
                    <xs:documentation>
                        Property value is a subscription name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="TopicString">
                <xs:annotation>
                    <xs:documentation>
                        Property value is a topic string to subscribe to.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Channel">
                <xs:annotation>
                    <xs:documentation>
                        Property value is a channel name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StripHeaders">
                <xs:annotation>
                    <xs:documentation>
                        Property identifies whether stream should strip RAW activity data (e.g., WMQ message) headers.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StartFromLatest">
                <xs:annotation>
                    <xs:documentation>
                        Property identifies that streaming should be performed from latest log entry. If 'false' - then latest log file is
                        streamed from beginning.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="FileReadDelay">
                <xs:annotation>
                    <xs:documentation>
                        Property defines delay in seconds between file reading iterations.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="HaltIfNoParser">
                <xs:annotation>
                    <xs:documentation>
                        Property identifies whether stream should halt if none of the parsers can parse activity RAW data. If set to 'false'
                        - puts log entry and continues.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="UseExecutors">
                <xs:annotation>
                    <xs:documentation>
                        Property identifies identifies whether stream should use executor service to process activities data items
                        asynchronously or not.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ExecutorThreadsQuantity">
                <xs:annotation>
                    <xs:documentation>
                        Property defines executor service thread pool size.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ExecutorRejectedTaskOfferTimeout">
                <xs:annotation>
                    <xs:documentation>
                        Property defines time to wait (in seconds) for a executor service to terminate.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ExecutorsTerminationTimeout">
                <xs:annotation>
                    <xs:documentation>
                        Property defines time to wait (in seconds) for a task to be inserted into bounded queue if max. queue size is
                        reached.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ExecutorsBoundedModel">
                <xs:annotation>
                    <xs:documentation>
                        Property identifies whether executor service should use bounded tasks queue model.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Keystore">
                <xs:annotation>
                    <xs:documentation>
                        Property defines keystore path.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="KeystorePass">
                <xs:annotation>
                    <xs:documentation>
                        Property defines keystore password.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="KeyPass">
                <xs:annotation>
                    <xs:documentation>
                        Property defines key password.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="JNDIFactory">
                <xs:annotation>
                    <xs:documentation>
                        Property defines JNDI context factory class name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="JMSConnFactory">
                <xs:annotation>
                    <xs:documentation>
                        Property defines JMS connection factory class name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ServerURI">
                <xs:annotation>
                    <xs:documentation>
                        Property defines a connection server URI.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="UserName">
                <xs:annotation>
                    <xs:documentation>
                        Property defines a user/login name.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Password">
                <xs:annotation>
                    <xs:documentation>
                        Property defines a user/login password.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="UseSSL">
                <xs:annotation>
                    <xs:documentation>
                        Property identifies whether connection should use SSL.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ReadLines">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates that complete activity RAW data (e.g., JSON) package is single line.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="RestartOnInputClose">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates to restart stream if input socked gets closed.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ArchType">
                <xs:annotation>
                    <xs:documentation>
                        Property to define zipped stream processed archive type (e.g., ZIP, GZIP, JAR).
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="BufferSize">
                <xs:annotation>
                    <xs:documentation>
                        Property to define buffered stream buffer max. capacity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="BufferOfferTimeout">
                <xs:annotation>
                    <xs:documentation>
                        Property to define buffered stream buffer element offer timeout value in seconds.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="FilePolling">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates that stream should run in file polling mode.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="RestoreState">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates that stream should restore streaming state after (re)start (i.e., continue from last streamed
                        file line).
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StartServer">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates that stream should start as server (e.g., Kafka server) if stream supports both client and server
                        modes.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="InputCloseable">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates that stream should close input after streaming is complete.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="RangeToStream">
                <xs:annotation>
                    <xs:documentation>
                        Property to define streamed activity data range (i.e., file lines or sheet rows) from:to.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StreamCacheMaxSize">
                <xs:annotation>
                    <xs:documentation>
                        Property to define stream used cache max. capacity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StreamCacheExpireDuration">
                <xs:annotation>
                    <xs:documentation>
                        Property to define stream used cache entries expiration duration in minutes.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StreamReconnectDelay">
                <xs:annotation>
                    <xs:documentation>
                        Property defines delay in seconds between queue manager reconnection or failed queue GET iterations.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Parser property names enumeration definition -->
    <xs:simpleType name="ParserProperties">
        <xs:annotation>
            <xs:documentation>
                Set of internally-supported parser properties.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Pattern">
                <xs:annotation>
                    <xs:documentation>
                        Property value is a regular expression pattern.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="FieldDelim">
                <xs:annotation>
                    <xs:documentation>
                        Property value represents the delimiter between fields in raw activity data.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ValueDelim">
                <xs:annotation>
                    <xs:documentation>
                        Property value represents the delimiter between the label and value for a field in raw activity data.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StripQuotes">
                <xs:annotation>
                    <xs:documentation>
                        Property value is "true" to remove surrounding double quotes from data value, or "false" to keep them.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="SignatureDelim">
                <xs:annotation>
                    <xs:documentation>
                        Property value is string identifying the delimiter between signature elements.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="RequireDefault">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates that all attributes are required by default.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="StripHeaders">
                <xs:annotation>
                    <xs:documentation>
                        Property identifies whether stream should strip RAW activity data (e.g., WMQ message) headers.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Namespace">
                <xs:annotation>
                    <xs:documentation>
                        Property to define additional XML namespace mappings.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="ReadLines">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates that complete activity RAW data (e.g., JSON) package is single line.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="LocPathDelim">
                <xs:annotation>
                    <xs:documentation>
                        Property to defile locator path delimiter for a nested structures (e.g., maps).
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="UseActivityDataAsMessageForUnset">
                <xs:annotation>
                    <xs:documentation>
                        Property indicates that activity RAW data shall be put into 'Message' field of activity entity if no custom mapping
                        for that field is defined.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Allow user-defined types for custom properties in addition to built-in types for use with user-defined streams -->
    <xs:simpleType name="StreamPropertiesAll">
        <xs:annotation>
            <xs:documentation>
                Can be either one of the internally-supported properties or a custom one.
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="StreamProperties xs:string"/>
    </xs:simpleType>

    <!-- Allow user-defined types for custom properties in addition to built-in types for use with user-defined parsers -->
    <xs:simpleType name="ParserPropertiesAll">
        <xs:annotation>
            <xs:documentation>
                Can be either one of the internally-supported properties or a custom one.
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="ParserProperties xs:string"/>
    </xs:simpleType>

    <!-- Activity data aggregation types enumeration definition -->
    <xs:simpleType name="AggregationTypes">
        <xs:annotation>
            <xs:documentation>
                Set of activity entities data aggregation types.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Merge">
                <xs:annotation>
                    <xs:documentation>
                        Merge stacked parser resolved activity entity data to parent activity entity.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Join">
                <xs:annotation>
                    <xs:documentation>
                        Add stacked parser resolved activity entity data to parent activity entity as child.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Element <property> definition -->
    <xs:complexType name="Property">
        <xs:annotation>
            <xs:documentation>
                Defines a generic configuration entity property.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Name of the property.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>

                <xs:attribute name="value" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Value of the property.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- Element <property> under <stream> definition -->
    <xs:complexType name="StreamProperty">
        <xs:annotation>
            <xs:documentation>
                Defines a stream configuration entity property - set of supported properties is entity-specific.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" use="required" type="StreamPropertiesAll">
                    <xs:annotation>
                        <xs:documentation>
                            Name of the property.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>

                <xs:attribute name="value" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Value of the property.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- Element <property> under <parser> definition -->
    <xs:complexType name="ParserProperty">
        <xs:annotation>
            <xs:documentation>
                Defines a parser configuration entity property - set of supported properties is entity-specific.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" use="required" type="ParserPropertiesAll">
                    <xs:annotation>
                        <xs:documentation>
                            Name of the property.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>

                <xs:attribute name="value" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Value of the property.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- Common java object attributes group definition-->
    <xs:attributeGroup name="EntityAttributeGroup">
        <xs:annotation>
            <xs:documentation>
                Defines attributes common to all configuration entities.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Name of entity
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="class" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Name of class implementing entity.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>

    <!-- Field locator attributes group definition -->
    <xs:attributeGroup name="FieldLocatorAttributes">
        <xs:annotation>
            <xs:documentation>
                Defines attributes common to all field locator elements.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="locator" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Position/location/label of field value in activity string, or stream property name - can be a comma-separated list if
                    multiple values from activity string are needed for a field.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="locator-type" use="optional" type="FieldLocatorTypesAll">
            <xs:annotation>
                <xs:documentation>
                    Indicates how to interpret attribute 'locator'.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="datatype" use="optional" type="DataTypes" default="String">
            <xs:annotation>
                <xs:documentation>
                    Indicates how to interpret value extracted for this field.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="radix" use="optional" type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>
                    For numeric values, indicates the radix that the value is specified in (ignored if format is specified).
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="units" use="optional" type="UnitsTypesAll">
            <xs:annotation>
                <xs:documentation>
                    Identifies the units represented by value.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="timezone" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Specifies the time zone that a date/time string is represented in (when not specified, date/time string is assumed to be
                    in local time zone).
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="format" use="optional" type="DataFormatsAll">
            <xs:annotation>
                <xs:documentation>
                    Specifies format type or representation that value is expected to be in (e.g. binary, date/time string, decimal format,
                    etc.).
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="locale" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Specifies locale for data formatter to use.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="value" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Specifies a constant value to use for this field instead of extracting it from activity string.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="required" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Indicates whether field availability is required.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="id" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Field locator identifier.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="cacheKey" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Stream cache key to store resolved value.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>

    <!-- Element <field-map> definition -->
    <xs:complexType name="FieldMap">
        <xs:annotation>
            <xs:documentation>
                Maps a raw value from the activity string to the required field value for JKool Cloud.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="source" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Value from activity string to map (an empty source mapping indicates default to use when no match).
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="target" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Value to use for activity field.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="type" use="optional" type="FieldMapTypes" default="Value">
            <xs:annotation>
                <xs:documentation>
                    Type of mapping.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Element <field-map-ref> definition -->
    <xs:complexType name="FieldMapRef">
        <xs:annotation>
            <xs:documentation>
                Defines resource reference defining mapping of field value from the activity string to the required field value for JKool
                Cloud.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="resource" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Resource identifier referring definition of values mapping.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Field value mapping types enumeration definition -->
    <xs:simpleType name="FieldMapTypes">
        <xs:annotation>
            <xs:documentation>
                Supported field value mapping types.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Value">
                <xs:annotation>
                    <xs:documentation>
                        Mapping type is straight mapping from source value to target value.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Range">
                <xs:annotation>
                    <xs:documentation>
                        Mapping type is from range of source values to single target value.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="Calc">
                <xs:annotation>
                    <xs:documentation>
                        Mapping type is from calculated source value to single target value.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Element <field-locator> definition -->
    <xs:complexType name="FieldLocator" mixed="true">
        <xs:annotation>
            <xs:documentation>
                Defines a field locator configuration entity.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="field-map" type="FieldMap" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Maps a field value from the activity string to the required field value for JKool Cloud.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="field-map-ref" type="FieldMapRef" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines resource reference defining mapping of field value from the activity string to the required field value for
                        JKool Cloud.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="field-transform" type="FieldTransform" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Transforms locator resolved value by applying transformation bean/script/expression defined
                        rules.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="filter" type="Filter" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Specifies a filter element for the field locator.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attributeGroup ref="FieldLocatorAttributes"/>
    </xs:complexType>

    <!-- Element <field-transform> definition -->
    <xs:complexType name="FieldTransform">
        <xs:annotation>
            <xs:documentation>
                Transforms field/locator value by applying transformation bean/script/expression defined rules.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Transformation name.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>

                <xs:attribute name="beanRef" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Transformation implementing bean reference.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>

                <xs:attribute name="lang" use="optional" type="ScriptLangs" default="javascript">
                    <xs:annotation>
                        <xs:documentation>
                            Transformation script/expression language.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
        <!--<xs:assert test="(@bean and not(@lang)) or (not(@bean) and @lang)"/>-->
    </xs:complexType>

    <!-- Script languages enumeration definition -->
    <xs:simpleType name="ScriptLangs">
        <xs:annotation>
            <xs:documentation>
                Supported scripting languages.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="javascript">
                <xs:annotation>
                    <xs:documentation>
                        JavaScript language used to script.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="groovy">
                <xs:annotation>
                    <xs:documentation>
                        Groovy language used to script.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="xpath">
                <xs:annotation>
                    <xs:documentation>
                        XPath syntax and functions used to script.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Element <filter> definition -->
    <xs:complexType name="Filter">
        <xs:annotation>
            <xs:documentation>
                Filters activity data to be included/excluded from streaming by evaluating value or script/expression defined rules.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="value" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines value type filter entity.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="handle" use="required" type="HandleTypes">
                                <xs:annotation>
                                    <xs:documentation>
                                        Filter matching value handling type - include or exclude.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="evaluation" use="optional" type="EvaluationTypes" default="is">
                                <xs:annotation>
                                    <xs:documentation>
                                        Defines value evaluation method used by filter.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="format" use="optional" type="DataFormatsAll">
                                <xs:annotation>
                                    <xs:documentation>
                                        Defines what value for mat should be used for comparison.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="expression" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines expression type filter entity.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="handle" use="required" type="HandleTypes">
                                <xs:annotation>
                                    <xs:documentation>
                                        Filter matching value handling type - include or exclude.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="lang" use="required" type="ScriptLangs">
                                <xs:annotation>
                                    <xs:documentation>
                                        Filter expression evaluation language.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>

        <xs:attribute name="name" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Name of the filter.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Filter handle types enumeration definition -->
    <xs:simpleType name="HandleTypes">
        <xs:annotation>
            <xs:documentation>
                Supported filter handle types.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="include">
                <xs:annotation>
                    <xs:documentation>
                        Include filtered entity to streaming.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="exclude">
                <xs:annotation>
                    <xs:documentation>
                        Exclude filtered entity from streaming.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Filter evaluation types enumeration definition -->
    <xs:simpleType name="EvaluationTypes">
        <xs:annotation>
            <xs:documentation>
                Supported filter value evaluation types.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="is">
                <xs:annotation>
                    <xs:documentation>
                        Value evaluation by direct comparison for equality.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="contains">
                <xs:annotation>
                    <xs:documentation>
                        Value evaluation by checking if value contents has defined subset value.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="wildcard">
                <xs:annotation>
                    <xs:documentation>
                        Value evaluation by matching wildcard pattern.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="regex">
                <xs:annotation>
                    <xs:documentation>
                        Value evaluation by matching regular expression.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Element <reference> definition -->
    <xs:complexType name="Reference">
        <xs:annotation>
            <xs:documentation>
                Associates enclosing entity with other defined entity reference.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Must be name of a defined entity.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Element <parser-ref> definition -->
    <xs:complexType name="FieldParserReference">
        <xs:annotation>
            <xs:documentation>
                Associates field with stacked parser reference.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="Reference">
                <xs:attribute name="aggregation" use="optional" type="AggregationTypes" default="Merge">
                    <xs:annotation>
                        <xs:documentation>
                            Defines type of stacked parser resolved activity entity data aggregation into parent activity entity.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Element <field> definition -->
    <xs:complexType name="Field">
        <xs:annotation>
            <xs:documentation>
                Translates an item from an activity RAW data to an activity entity field.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <!--<xs:choice>-->
            <xs:element name="field-locator" type="FieldLocator" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Associates a field location from the activity string with an activity field.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="field-map" type="FieldMap" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Maps a field value from the activity string to the required field value for JKool Cloud.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="field-map-ref" type="FieldMapRef" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines resource reference defining mapping of field value from the activity string to the required field value for
                        JKool Cloud.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!--</xs:choice>-->

            <xs:element name="field-transform" type="FieldTransform" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Transforms resolved field value by applying transformation bean/script/expression defined rules.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="parser-ref" type="FieldParserReference" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Associates field with defined parser to additionally process field value.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="filter" type="Filter" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Specifies a filter element for the field.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>

        <xs:attribute name="name" use="required" type="FieldNamesAll">
            <xs:annotation>
                <xs:documentation>
                    Name of TNT4J-Streams field from defined list of fields.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="separator" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    String to insert between values when concatenating multiple activity values into field.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="formattingPattern" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    String representation formatting pattern of multiple raw activity values concatenated into field.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="transparent" use="optional" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>
                    Specifies whether resolved field value should be added to produced activity data. If some stacked parser is
                    used for a field it may be desired not to add such field raw data value to produced activity data.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="value-type" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Defines field resolved user defined value type, e.g., size, age, speed.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="split" use="optional" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>
                    Specifies whether resolved array or collection type field value should be split into separate produced
                    activity fields.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attributeGroup ref="FieldLocatorAttributes"/>
    </xs:complexType>

    <!-- Embedded activity locator attributes group definition -->
    <xs:attributeGroup name="EmbeddedActivityLocatorAttributes">
        <xs:annotation>
            <xs:documentation>
                Defines embedded activity locator related attributes.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="locator" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Position/location/label of field value in activity string, or stream property name - can be a comma-separated list if
                    multiple values from activity string are needed for a field.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="locator-type" use="required" type="FieldLocatorTypesAll">
            <xs:annotation>
                <xs:documentation>
                    Indicates how to interpret attribute 'locator'.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="required" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Indicates whether field availability is required.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="id" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Field locator identifier.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>

    <!-- Element <embedded-activity> definition -->
    <xs:complexType name="EmbeddedActivity">
        <xs:annotation>
            <xs:documentation>
                Defines activity field containing embedded activity entities data parsed by referenced parser.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="field-locator" type="FieldLocator" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Associates a field location from the activity string with an activity field.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element name="field-transform" type="FieldTransform" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Transforms resolved field value by applying transformation bean/script/expression defined rules.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="parser-ref" type="FieldParserReference" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Associates field with defined parser to additionally process field value.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="filter" type="Filter" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Specifies a filter element for the field.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>

        <xs:attribute name="name" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Name of TNT4J-Streams field from defined list of fields.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="transparent" use="prohibited" type="xs:boolean" fixed="true">
            <xs:annotation>
                <xs:documentation>
                    Specifies whether resolved field value should be added to produced activity data. If some stacked parser is
                    used for a field it may be desired not to add such field raw data value to produced activity data.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="split" use="prohibited" type="xs:boolean" fixed="true">
            <xs:annotation>
                <xs:documentation>
                    Specifies whether resolved array or collection type field value should be split into separate produced
                    activity fields.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attributeGroup ref="EmbeddedActivityLocatorAttributes"/>
    </xs:complexType>

    <!-- Element <parser> definition -->
    <xs:complexType name="Parser">
        <xs:annotation>
            <xs:documentation>
                Defines a parser to extract activity elements from a string identifying an activity.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="property" type="ParserProperty" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Specifies a configuration property for the parser - property names are parser-specific.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element name="reference" type="Reference" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Associates a defined entity with this parser. It can be pre-parser, etc.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element name="field" type="Field" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Translates an item from an activity RAW data to an activity entity field.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="embedded-activity" type="EmbeddedActivity" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Specifies that locator resolved values are embedded activity entities and should be parsed by referenced parser.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="filter" type="Filter" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Specifies a filter element for the parser.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>

        <xs:attributeGroup ref="EntityAttributeGroup">
            <xs:annotation>
                <xs:documentation>
                    Defines name and implementing class for parser.
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>

        <xs:attribute name="tags" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Tags list (separated using ',') for a parser. Tags are used to map incoming parseable data package with parser instance
                    dedicated to parse it.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Element <cache> definition -->
    <xs:complexType name="Cache">
        <xs:annotation>
            <xs:documentation>
                Defines a stream cache entries patterns.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="entry" type="CacheEntry" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines a stream cache entry key and values patterns.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- Element <entry> definition -->
    <xs:complexType name="CacheEntry">
        <xs:annotation>
            <xs:documentation>
                Defines a stream cache entry key and values patterns.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="key" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Defines cache entry key pattern.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:element>
            <xs:element name="value" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Defines cache entry value pattern.
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>

        <xs:attribute name="id" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Cache entry identifier.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Element <stream> definition -->
    <xs:complexType name="Stream">
        <xs:annotation>
            <xs:documentation>
                Defines a activity elements RAW data input stream.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="property" type="StreamProperty" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Specifies a configuration property for the stream - property names are stream-specific.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element name="parser-ref" type="Reference" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Associates a parser with this stream. If multiple parsers associated, they are applied in configuration defined
                        order until one successfully parses activity data.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element name="reference" type="Reference" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Associates a defined entity with this stream. It can be parser (covers "parser-ref"), other TNT4J stream, Java Input
                        Stream, etc.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element name="tnt4j-properties" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Defines set of specific TNT4J properties for this stream.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="property" type="Property" minOccurs="1" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>
                                    Defines a TNT4J property.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="cache" type="Cache" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines a stream cache entries patterns.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

        </xs:sequence>

        <xs:attributeGroup ref="EntityAttributeGroup">
            <xs:annotation>
                <xs:documentation>
                    Defines name and implementing class for stream.
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>

    <!-- Element <param> definition -->
    <xs:complexType name="Parameter">
        <xs:annotation>
            <xs:documentation>
                Defines a java object constructor parameter: argument value and type.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Name of the parameter.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="value" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Argument value of the parameter.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="type" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Parameter type class name.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Element <resource-ref> definition -->
    <xs:complexType name="ResourceReference">
        <xs:annotation>
            <xs:documentation>
                Defines a external resource reference to be used by this streams data source configuration.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Reference identifier.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="type" use="required" type="ResourceReferenceType">
            <xs:annotation>
                <xs:documentation>
                    Referenced resource type.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="uri" use="required" type="xs:anyURI">
            <xs:annotation>
                <xs:documentation>
                    Resource location URI (relative or absolute).
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="separator" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    String to use as mapping key value delimiter.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Resource reference types enumeration definition -->
    <xs:simpleType name="ResourceReferenceType">
        <xs:annotation>
            <xs:documentation>
                Supported referenced resource types.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="ValuesMap">
                <xs:annotation>
                    <xs:documentation>
                        Resource defines values mappings.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Element <java-object> definition -->
    <xs:complexType name="JavaObject">
        <xs:sequence>
            <xs:element name="param" type="Parameter" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Specifies a constructor parameter for referenced java object.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="property" type="Property" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Specifies a configuration property for referenced java object - property names are object-specific.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

        </xs:sequence>

        <xs:attributeGroup ref="EntityAttributeGroup">
            <xs:annotation>
                <xs:documentation>
                    Defines name and implementing class for Java object.
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>

    <!-- Configuration root element <tnt-data-source> definition -->
    <xs:element name="tnt-data-source">
        <xs:annotation>
            <xs:documentation>
                Root element for jKool LLC TNT4J-Streams data source configuration.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:annotation>
                <xs:documentation>
                    Defines TNT4J-Streams data source configuration.
                </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:element name="resource-ref" type="ResourceReference" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            Defines resource reference to be included to data source configuration.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>

                <xs:element name="java-object" type="JavaObject" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            Defines Java object parameters to reference.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>

                <xs:element name="parser" type="Parser" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            Defines a parser to extract activity elements from a string identifying an activity.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>

                <xs:element name="stream" type="Stream" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            Defines a activity elements RAW data input stream.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>

        <!-- Make sure <parser> names are unique -->
        <xs:key name="UniqueParserName">
            <xs:selector xpath="parser"/>
            <xs:field xpath="@name"/>
        </xs:key>

        <!-- Make sure <stream> names are unique -->
        <xs:key name="UniqueStreamName">
            <xs:selector xpath="stream"/>
            <xs:field xpath="@name"/>
        </xs:key>

        <!-- Make sure <java-object> names are unique -->
        <xs:key name="UniqueJavaObjectName">
            <xs:selector xpath="java-object"/>
            <xs:field xpath="@name"/>
        </xs:key>

        <!-- Make sure any <parser>, <stream> or <java-object> names are unique -->
        <xs:key name="UniqueRefName">
            <xs:selector xpath="parser|stream|java-object"/>
            <xs:field xpath="@name"/>
        </xs:key>

        <!-- Make sure <parser-ref> points to valid <parser> name -->
        <xs:keyref name="ValidFieldParserRef" refer="UniqueParserName">
            <xs:selector xpath="parser/field/parser-ref"/>
            <xs:field xpath="@name"/>
        </xs:keyref>

        <!-- Make sure <parser-ref> points to valid <parser> name -->
        <xs:keyref name="ValidStreamParserRef" refer="UniqueParserName">
            <xs:selector xpath="stream/parser-ref"/>
            <xs:field xpath="@name"/>
        </xs:keyref>

        <!-- Make sure <reference> points to valid <stream>, <parser> or <java-object> name -->
        <xs:keyref name="ValidStreamJavaObjectReference" refer="UniqueRefName">
            <xs:selector xpath="stream/reference"/>
            <xs:field xpath="@name"/>
        </xs:keyref>

        <!-- Make sure <cache> entries identifiers are unique -->
        <xs:key name="UniqueCacheEntryId">
            <xs:selector xpath="stream/cache/entry"/>
            <xs:field xpath="@id"/>
        </xs:key>

        <!-- Make sure Cache type <locator> points to valid <entry> id -->
        <!--<xs:keyref name="ValidFieldCacheLocatorRef" refer="UniqueCacheEntryId">-->
        <!--<xs:selector xpath="parser/field[@locator-type='Cache']"/>-->
        <!--<xs:field xpath="@locator"/>-->
        <!--</xs:keyref>-->

        <!-- Make sure <resource-ref> identifiers are unique -->
        <xs:key name="UniqueResourceId">
            <xs:selector xpath="resource-ref"/>
            <xs:field xpath="@id"/>
        </xs:key>

        <!-- Make sure <field-map-ref> points to valid <resource-ref> identifier -->
        <!--<xs:keyref name="ValidFieldResourceReference" refer="UniqueResourceId">-->
        <!--<xs:selector xpath="parser/field/field-map-ref"/>-->
        <!--<xs:field xpath="@resource"/>-->
        <!--</xs:keyref>-->

        <!-- Make sure <field-map-ref> points to valid <resource-ref> identifier -->
        <!--<xs:keyref name="ValidFieldLocatorResourceReference" refer="UniqueResourceId">-->
        <!--<xs:selector xpath="parser/field/field-locator/field-map-ref"/>-->
        <!--<xs:field xpath="@resource"/>-->
        <!--</xs:keyref>-->
    </xs:element>

</xs:schema>
